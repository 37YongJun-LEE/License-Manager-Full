package egovframework.kku.adm.web;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang.StringEscapeUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import egovframework.cms.com.service.EgovCmsComService;
import egovframework.cms.com.util.EgovCmsUserDetailsHelper;
import egovframework.kku.adm.service.EgovKkuAdmCampusInfoVO;
import egovframework.kku.adm.service.EgovKkuAdmCampusService;
import egovframework.kku.adm.service.EgovKkuAdmFacilityReportVO;
import egovframework.kku.adm.service.EgovKkuAdmLoginSessionVO;
import egovframework.kku.adm.service.EgovKkuAdmStudentInfoVO;
import egovframework.kku.usr.service.EgovKkuAppSchoolInfoCrawlerVO;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;

@Controller
public class EgovKkuAdmCampusController {
	@Resource(name="commonService")
	EgovCmsComService commonService;
	
	@Resource(name="adminCampusService")
	private EgovKkuAdmCampusService adminCampusService;
	
	//학교정보
	@RequestMapping(value="/admin/campusinfo.do") 
	 public String campusinfo(EgovKkuAdmCampusInfoVO infoVO,Model model, EgovKkuAdmLoginSessionVO sessionVO) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		EgovKkuAdmLoginSessionVO sessionVO1 = (EgovKkuAdmLoginSessionVO) EgovCmsUserDetailsHelper.getAuthenticatedUserInfo();
		model.addAttribute("sessionID", sessionVO1.getUsrEmail());
		
		/*List<?> campusInfoList = adminCampusService.selectCampusInfoList(infoVO);
		model.addAttribute("campusInfoList",campusInfoList);*/
		
		//페이지네이션
		PaginationInfo paginationInfo = new PaginationInfo();
	    paginationInfo.setCurrentPageNo(infoVO.getPageIndex());
	    infoVO.setPageUnit(15);
	    paginationInfo.setRecordCountPerPage(15); //한페이지당 게시되는 게시물 건수 UserVO.getPageUnit()
        paginationInfo.setPageSize(10); //페이지 리스트에 게시되는 페이지 건수

        infoVO.setFirstIndex(paginationInfo.getFirstRecordIndex());
        infoVO.setLastIndex(paginationInfo.getLastRecordIndex());
        infoVO.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());

        paginationInfo.setTotalRecordCount(adminCampusService.selectCampusInfoListCnt(infoVO));
        System.err.println(adminCampusService.selectCampusInfoList(infoVO));
        List<EgovMap> list = adminCampusService.selectCampusInfoList(infoVO);
		model.addAttribute("campusInfoList", list);
        model.addAttribute("paginationInfo", paginationInfo);
		
		return "kkuapp/adm/campus/campusinfo"; 
	 }
	//학교 정보 Detail
	@RequestMapping(value="/admin/campusinfoDetail.do")
	public String campusinfoDetail(EgovKkuAdmCampusInfoVO infoVO,Model model) throws Exception{
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		EgovKkuAdmCampusInfoVO campusInfo = adminCampusService.selectCampusInfoDetail(infoVO);
		model.addAttribute("campusInfo",campusInfo);
		
		return "kkuapp/adm/campus/campusinfoDetail";
	}
	
	@RequestMapping(value="/admin/campusinfoModifyAction.do")
	@ResponseBody
	public String campusinfoModifyAction(EgovKkuAdmCampusInfoVO infoVO) throws  Exception{
		System.err.println("campusinfoModifyAction.do");
		System.err.println(infoVO.toString());
		
		String cont = infoVO.getNoticeContent();
		String unescape = StringEscapeUtils.unescapeHtml(cont);
		System.err.println("Unescape==="+unescape);
		infoVO.setNoticeContent(unescape);
		
		int result = adminCampusService.updateCampusInfo(infoVO);
		String resultMsg = "";
		if( result == 1){
			resultMsg = "success";
		}else{
			resultMsg = "fail";
		}
		return resultMsg;
	}
	
	//학교 정보 업데이트
	@RequestMapping(value="/admin/campusinfoupdate.do")
	public String campusinfoUpdate(Model model) throws Exception{
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		List<?> campusInfoUpdateList = adminCampusService.selectCampusInfoUpdateList();
		model.addAttribute("campusInfoUpdateList", campusInfoUpdateList );
		
		return "kkuapp/adm/campus/campusinfoupdate";
	}
	
	//학과 정보
	@RequestMapping(value="/admin/studentinfo.do") 
	  public String studentinfo(EgovKkuAppSchoolInfoCrawlerVO infoVO,Model model, EgovKkuAdmLoginSessionVO sessionVO) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		EgovKkuAdmLoginSessionVO sessionVO1 = (EgovKkuAdmLoginSessionVO) EgovCmsUserDetailsHelper.getAuthenticatedUserInfo();
		model.addAttribute("sessionID", sessionVO1.getUsrEmail());
		
		//페이지네이션
		PaginationInfo paginationInfo = new PaginationInfo();
	    paginationInfo.setCurrentPageNo(infoVO.getPageIndex());
	    infoVO.setPageUnit(15);
	    paginationInfo.setRecordCountPerPage(15); //한페이지당 게시되는 게시물 건수 UserVO.getPageUnit()
        paginationInfo.setPageSize(10); //페이지 리스트에 게시되는 페이지 건수

        infoVO.setFirstIndex(paginationInfo.getFirstRecordIndex());
        infoVO.setLastIndex(paginationInfo.getLastRecordIndex());
        infoVO.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());

        paginationInfo.setTotalRecordCount(adminCampusService.selectStudentInfoListCnt(infoVO));
        System.err.println(adminCampusService.selectStudentInfoList(infoVO));
        
        List<EgovMap> list = adminCampusService.selectStudentInfoList(infoVO);
		model.addAttribute("studentInfoList", list);
        model.addAttribute("paginationInfo", paginationInfo);
		 
		return "kkuapp/adm/campus/studentinfo"; 
	 }
	//학과정보 Detail
	@RequestMapping(value="/admin/studentinfoDetail.do")
	public String studentinfoDetail(EgovKkuAdmStudentInfoVO infoVO,Model model) throws Exception{
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		EgovKkuAdmStudentInfoVO studentInfo = adminCampusService.selectStudentInfoDetail(infoVO);
		model.addAttribute("studentInfo",studentInfo);
		System.err.println(studentInfo.toString());
		return "kkuapp/adm/campus/studentinfoDetail";
	}
	
	@RequestMapping(value="/admin/studentinfoModifyAction.do")
	@ResponseBody
	public String studentinfoModifyAction(EgovKkuAdmStudentInfoVO infoVO) throws Exception{
		System.err.println("studentinfoModifyAction.do");
		System.err.println(infoVO.toString());
		
		String cont = infoVO.getMnoticeContent();
		String unescape = StringEscapeUtils.unescapeHtml(cont);
		System.err.println("Unescape==="+unescape);
		infoVO.setMnoticeContent(unescape);
		
		int result = adminCampusService.updateStudentInfo(infoVO);
		String resultMsg = "";
		if( result == 1){
			resultMsg = "success";
		}else{
			resultMsg = "fail";
		}
		return resultMsg;
	}
	//학과 정보 업데이트
	@RequestMapping(value="/admin/studentinfoupdate.do")
	public String studentinfoUpdate(Model model) throws Exception{
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		List<?> studentInfoUpdateList = adminCampusService.selectStudentInfoUpdateList();
		model.addAttribute("studentInfoUpdateList", studentInfoUpdateList );
		
		return "kkuapp/adm/campus/studentinfoupdate";
	}
	
	@RequestMapping(value="/admin/oneroom.do") 
	  public String oneroom(Model model) throws Exception {
		  
		//left 메뉴 class on
		model.addAttribute("depth01","oneroom");
		
	 return "kkuapp/adm/campus/oneroom"; 
	 
	 }
	@RequestMapping(value="/admin/restaurant.do") 
	  public String restaurantt(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","restaurant");
		  
	 return "kkuapp/adm/campus/restaurant"; 
	 
	 }
	@RequestMapping(value="/admin/schoolfood.do") 
	  public String schoolfood(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		  
	 return "kkuapp/adm/campus/schoolfood"; 
	 
	 }
	@RequestMapping(value="/admin/calandar.do") 
	  public String calandar(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		  
	 return "kkuapp/adm/campus/calandar"; 
	 
	 }
	@RequestMapping(value="/admin/bustime.do") 
	  public String bustime(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		  
	 return "kkuapp/adm/campus/bustime"; 
	 
	 }
	@RequestMapping(value="/admin/fixReport.do") 
	  public String fixReport(Model model,@ModelAttribute("vo") EgovKkuAdmFacilityReportVO vo) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		PaginationInfo paginationInfo = new PaginationInfo();
	    paginationInfo.setCurrentPageNo(vo.getPageIndex());
	    vo.setPageUnit(15);
	    paginationInfo.setRecordCountPerPage(15); //한페이지당 게시되는 게시물 건수 UserVO.getPageUnit()
        paginationInfo.setPageSize(10); //페이지 리스트에 게시되는 페이지 건수
        
        vo.setFirstIndex(paginationInfo.getFirstRecordIndex());
        vo.setLastIndex(paginationInfo.getLastRecordIndex());
        vo.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());
        
        List<?> reportList = adminCampusService.getReportList(vo);
        paginationInfo.setTotalRecordCount(adminCampusService.getReportListCnt(vo));
        

		 model.addAttribute("reportList", reportList);
	 return "kkuapp/adm/campus/fixReport"; 
	 
	 }
	
	@RequestMapping(value="/admin/fixReportView.do") 
	  public String fixReportView(Model model,@ModelAttribute("rVO") EgovKkuAdmFacilityReportVO rVO) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		//페이지네이션
		
		EgovMap resultMap = adminCampusService.selectFacilityReportDetailByIdx(rVO);
		model.addAttribute("resultMap", resultMap);
		
		List<EgovMap> reportProcessCodeList = commonService.getCommCodeList("fix_process_state");
		model.addAttribute("reportProcessCodeList", reportProcessCodeList);
		
	 return "kkuapp/adm/campus/fixReportView"; 
	 
	 }
	
	@RequestMapping(value="/admin/fixReportModifyAction.do") 
	@ResponseBody
	public String fixReportModifyAction(Model model,@ModelAttribute("rVO") EgovKkuAdmFacilityReportVO rVO) throws Exception {
	
		System.err.println(rVO.toString());
		adminCampusService.updateFixReportByIdx(rVO);
	 return "Y"; 
	 
	 }
}
