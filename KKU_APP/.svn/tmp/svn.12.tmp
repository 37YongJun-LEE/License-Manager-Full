package egovframework.kku.adm.web;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang.StringEscapeUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import egovframework.cms.com.util.EgovCmsUserDetailsHelper;
import egovframework.kku.adm.service.EgovKkuAdmCampusInfoVO;
import egovframework.kku.adm.service.EgovKkuAdmCampusService;
import egovframework.kku.adm.service.EgovKkuAdmLoginSessionVO;
import egovframework.kku.adm.service.EgovKkuAdmRestaurantMenuVO;
import egovframework.kku.adm.service.EgovKkuAdmRestaurantVO;
import egovframework.kku.adm.service.EgovKkuAdmStudentInfoVO;
import egovframework.kku.usr.service.EgovKkuAppSchoolInfoCrawlerVO;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;

@Controller
public class EgovKkuAdmCampusController {

	@Resource(name="adminCampusService")
	private EgovKkuAdmCampusService adminCampusService;
	
	//학교정보
	@RequestMapping(value="/admin/campusinfo.do") 
	 public String campusinfo(EgovKkuAdmCampusInfoVO infoVO,Model model, EgovKkuAdmLoginSessionVO sessionVO) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		EgovKkuAdmLoginSessionVO sessionVO1 = (EgovKkuAdmLoginSessionVO) EgovCmsUserDetailsHelper.getAuthenticatedUserInfo();
		model.addAttribute("sessionID", sessionVO1.getUsrEmail());
		
		/*List<?> campusInfoList = adminCampusService.selectCampusInfoList(infoVO);
		model.addAttribute("campusInfoList",campusInfoList);*/
		
		//페이지네이션
		PaginationInfo paginationInfo = new PaginationInfo();
	    paginationInfo.setCurrentPageNo(infoVO.getPageIndex());
	    infoVO.setPageUnit(15);
	    paginationInfo.setRecordCountPerPage(15); //한페이지당 게시되는 게시물 건수 UserVO.getPageUnit()
        paginationInfo.setPageSize(10); //페이지 리스트에 게시되는 페이지 건수

        infoVO.setFirstIndex(paginationInfo.getFirstRecordIndex());
        infoVO.setLastIndex(paginationInfo.getLastRecordIndex());
        infoVO.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());

        paginationInfo.setTotalRecordCount(adminCampusService.selectCampusInfoListCnt(infoVO));
        
        
        List<EgovMap> list = adminCampusService.selectCampusInfoList(infoVO);
		model.addAttribute("campusInfoList", list);
        model.addAttribute("paginationInfo", paginationInfo);
		
		return "kkuapp/adm/campus/campusinfo"; 
	 }
	//학교 정보 Detail
	@RequestMapping(value="/admin/campusinfoDetail.do")
	public String campusinfoDetail(EgovKkuAdmCampusInfoVO infoVO,Model model) throws Exception{
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		EgovKkuAdmCampusInfoVO campusInfo = adminCampusService.selectCampusInfoDetail(infoVO);
		model.addAttribute("campusInfo",campusInfo);
		
		return "kkuapp/adm/campus/campusinfoDetail";
	}
	
	@RequestMapping(value="/admin/campusinfoModifyAction.do")
	@ResponseBody
	public String campusinfoModifyAction(EgovKkuAdmCampusInfoVO infoVO) throws  Exception{
		System.err.println("campusinfoModifyAction.do");
		System.err.println(infoVO.toString());
		
		String cont = infoVO.getNoticeContent();
		String unescape = StringEscapeUtils.unescapeHtml(cont);
		System.err.println("Unescape==="+unescape);
		infoVO.setNoticeContent(unescape);
		
		int result = adminCampusService.updateCampusInfo(infoVO);
		String resultMsg = "";
		if( result == 1){
			resultMsg = "success";
		}else{
			resultMsg = "fail";
		}
		return resultMsg;
	}
	
	//학교 정보 업데이트
	@RequestMapping(value="/admin/campusinfoupdate.do")
	public String campusinfoUpdate(Model model) throws Exception{
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		List<?> campusInfoUpdateList = adminCampusService.selectCampusInfoUpdateList();
		model.addAttribute("campusInfoUpdateList", campusInfoUpdateList );
		
		return "kkuapp/adm/campus/campusinfoupdate";
	}
	
	//학과 정보
	@RequestMapping(value="/admin/studentinfo.do") 
	  public String studentinfo(EgovKkuAppSchoolInfoCrawlerVO infoVO,Model model, EgovKkuAdmLoginSessionVO sessionVO) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		EgovKkuAdmLoginSessionVO sessionVO1 = (EgovKkuAdmLoginSessionVO) EgovCmsUserDetailsHelper.getAuthenticatedUserInfo();
		model.addAttribute("sessionID", sessionVO1.getUsrEmail());
		
		//페이지네이션
		PaginationInfo paginationInfo = new PaginationInfo();
	    paginationInfo.setCurrentPageNo(infoVO.getPageIndex());
	    infoVO.setPageUnit(15);
	    paginationInfo.setRecordCountPerPage(15); //한페이지당 게시되는 게시물 건수 UserVO.getPageUnit()
        paginationInfo.setPageSize(10); //페이지 리스트에 게시되는 페이지 건수

        infoVO.setFirstIndex(paginationInfo.getFirstRecordIndex());
        infoVO.setLastIndex(paginationInfo.getLastRecordIndex());
        infoVO.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());

        paginationInfo.setTotalRecordCount(adminCampusService.selectStudentInfoListCnt(infoVO));
        
        List<EgovMap> list = adminCampusService.selectStudentInfoList(infoVO);
		model.addAttribute("studentInfoList", list);
        model.addAttribute("paginationInfo", paginationInfo);
		 
		return "kkuapp/adm/campus/studentinfo"; 
	 }
	//학과정보 Detail
	@RequestMapping(value="/admin/studentinfoDetail.do")
	public String studentinfoDetail(EgovKkuAdmStudentInfoVO infoVO,Model model) throws Exception{
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		EgovKkuAdmStudentInfoVO studentInfo = adminCampusService.selectStudentInfoDetail(infoVO);
		model.addAttribute("studentInfo",studentInfo);
		System.err.println(studentInfo.toString());
		return "kkuapp/adm/campus/studentinfoDetail";
	}
	
	@RequestMapping(value="/admin/studentinfoModifyAction.do")
	@ResponseBody
	public String studentinfoModifyAction(EgovKkuAdmStudentInfoVO infoVO) throws Exception{
		System.err.println("studentinfoModifyAction.do");
		System.err.println(infoVO.toString());
		
		String cont = infoVO.getMnoticeContent();
		String unescape = StringEscapeUtils.unescapeHtml(cont);
		System.err.println("Unescape==="+unescape);
		infoVO.setMnoticeContent(unescape);
		
		int result = adminCampusService.updateStudentInfo(infoVO);
		String resultMsg = "";
		if( result == 1){
			resultMsg = "success";
		}else{
			resultMsg = "fail";
		}
		return resultMsg;
	}
	//학과 정보 업데이트
	@RequestMapping(value="/admin/studentinfoupdate.do")
	public String studentinfoUpdate(Model model) throws Exception{
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		List<?> studentInfoUpdateList = adminCampusService.selectStudentInfoUpdateList();
		model.addAttribute("studentInfoUpdateList", studentInfoUpdateList );
		
		return "kkuapp/adm/campus/studentinfoupdate";
	}
	
	@RequestMapping(value="/admin/oneroom.do") 
	  public String oneroom(Model model) throws Exception {
		  
		//left 메뉴 class on
		model.addAttribute("depth01","oneroom");
		
	 return "kkuapp/adm/campus/oneroom"; 
	 
	 }
	@RequestMapping(value="/admin/restaurant.do") 
	  public String restaurant(EgovKkuAdmRestaurantVO restVO, Model model) throws Exception {
		
		
		
		/** pagination */
		PaginationInfo paginationInfo = new PaginationInfo();
		paginationInfo.setCurrentPageNo(restVO.getPageIndex());
		restVO.setPageUnit(5);
		paginationInfo.setRecordCountPerPage(5); // 한 페이지당 게시되면 게시물 건수 
		paginationInfo.setPageSize(10); 
		
		restVO.setFirstIndex(paginationInfo.getFirstRecordIndex());
		restVO.setLastIndex(paginationInfo.getLastRecordIndex());
		restVO.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());
		
		paginationInfo.setTotalRecordCount(adminCampusService.selectRestaurantListCnt(restVO));
		
		List<?> restaurantList = adminCampusService.selectRestaurantList(restVO);
		
		System.err.println(restaurantList);
		
		model.addAttribute("restaurant", restaurantList);
		model.addAttribute("paginationInfo", paginationInfo);
		//left 메뉴 class on
		model.addAttribute("depth01","restaurant");
		  
	 return "kkuapp/adm/campus/restaurant"; 
	 }
	
	@RequestMapping(value="/admin/restaurantModify.do")
	public String restaurantModify(EgovKkuAdmRestaurantVO restVO, Model model)throws Exception{
		model.addAttribute("depth01","restaurant");
		
		EgovMap modiFyRestaturant = adminCampusService.selectRestaurantDetail(restVO);	
		model.addAttribute("rest", modiFyRestaturant);
		
		return "kkuapp/adm/campus/restaurantModify";
	}
	
	@RequestMapping("/admin/restaurantModifySubmit.do")
	public String restSubmit(EgovKkuAdmRestaurantVO restVO)throws Exception {
		System.err.println(restVO);
		
		if (restVO.getRestIdx().isEmpty()) {
			adminCampusService.insertRestaurant(restVO);
		}else {
			adminCampusService.updateRestaurant(restVO);
		}
	
		return "redirect:/admin/restaurant.do";
	}
	
	@RequestMapping("/admin/restaurantDelete.do")
	public String restDelete(int restIdx)throws Exception{
		System.err.println(restIdx);
		
		adminCampusService.deleteRestaurant(restIdx);
		return "redirect:/admin/restaurant.do";
	}
	
	@RequestMapping("/admin/restaurantMenu.do")
	public String restMenu(int restIdx, Model model)throws Exception{
		
		List<?> menuList = adminCampusService.selectRestMenu(restIdx);
		
		List<?> addMenuList = adminCampusService.selectRestSubMenuList(restIdx);
		
		System.err.println(menuList);
		model.addAttribute("menu", menuList);
		model.addAttribute("restIdx", restIdx);
		model.addAttribute("addMenu", addMenuList);
		
		return "kkuapp/adm/campus/restaurantMenu";
	}
	
	@RequestMapping("/admin/restaurantMenuDelete.do")
	public String restMenuDel(String menuIdx, String restIdx)throws Exception{
		
		adminCampusService.deleteRestaurantMenu(menuIdx);
		
		return "redirect:/admin/restaurantMenu.do?restIdx=" + restIdx;
	}
	
	@RequestMapping("/admin/restaurantMenuSubmit.do")
	public String restMenuSubmit(EgovKkuAdmRestaurantMenuVO menuVO) {
		System.err.println(menuVO);
		String restIdx = menuVO.getRestIdx();
		String[] mainMenuIdx = menuVO.getMainMenuIdx().split("\\^");
		String[] mainMenuName = menuVO.getMainMenuName().split("\\^");
		String[] mainMenuDesc = menuVO.getMainMenuDesc().split("\\^");
		String[] mainMenuPrice = menuVO.getMainMenuPrice().split("\\^");
		String[] addSubMenu = menuVO.getAddSubMenu().split("\\^");
		
		String[] subMenuIdx = menuVO.getSubMenuIdx().split("\\^");
		System.err.println("subMenuIdx" + subMenuIdx.length);
		String[] subMenuName = menuVO.getSubMenuName().split("\\^");
		System.err.println("subMenuName" + subMenuName.length);
		String[] subMenuDesc = menuVO.getSubMenuDesc().split("\\^");
		System.err.println("subMenuDesc" + subMenuDesc.length);
		String[] subMenuPrice = menuVO.getSubMenuPrice().split("\\^");
		System.err.println("subMenuPrice" + subMenuPrice.length);
		
		System.err.println("addSubMenu : " +addSubMenu.length);
		for (int i = 0; i < mainMenuName.length; i++) {
			if (i >= mainMenuDesc.length) {
				menuVO.setMainMenuDesc("");
			}else {
				menuVO.setMainMenuDesc(mainMenuDesc[i]);
			}
			if(i >= addSubMenu.length) {
				menuVO.setAddSubMenu("");
			}else {
				menuVO.setAddSubMenu(addSubMenu[i]);
			}
			menuVO.setMainMenuIdx(mainMenuIdx[i]);
			menuVO.setMainMenuName(mainMenuName[i]);
			menuVO.setMainMenuPrice(mainMenuPrice[i]);
			adminCampusService.insertAndUpdateMainMenu(menuVO);
		}
		
		
		for (int i = 0; i < subMenuName.length; i++) {
			if (i >= subMenuDesc.length) {
				menuVO.setSubMenuDesc("");
			}else {
				menuVO.setSubMenuDesc(subMenuDesc[i]);
			}
			menuVO.setSubMenuIdx(subMenuIdx[i]);
			System.err.println("subMenuIdx[i]" + subMenuIdx[i]);
			menuVO.setSubMenuName(subMenuName[i]);
			System.err.println("subMenuName[i]" + subMenuName[i]);
			menuVO.setSubMenuPrice(subMenuPrice[i]);
			System.err.println("subMenuPrice[i]" + subMenuPrice[i]);
			adminCampusService.insertAndUpdateSubMenu(menuVO);
		}
		
		return "redirect:/admin/restaurant.do";
	}
	
	@RequestMapping("/admin/popup/addRestaurantMenu.do")
	public String popupAddRestaurantMenu(int restIdx, int menuIdx, Model model) {
		
		List<?> subMenu = adminCampusService.selectRestSubMenuList(restIdx);
		
		model.addAttribute("subMenu", subMenu);
		model.addAttribute("menuIdx", menuIdx);
		
		return "kkuapp/adm/campus/popup/addMenu";
	}
	
	
	@RequestMapping(value="/admin/schoolfood.do") 
	  public String schoolfood(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		  
	 return "kkuapp/adm/campus/schoolfood"; 
	 
	 }
	@RequestMapping(value="/admin/calandar.do") 
	  public String calandar(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		  
	 return "kkuapp/adm/campus/calandar"; 
	 
	 }
	@RequestMapping(value="/admin/bustime.do") 
	  public String bustime(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		  
	 return "kkuapp/adm/campus/bustime"; 
	 
	 }
	@RequestMapping(value="/admin/fixReport.do") 
	  public String fixReport(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		
		 List<?> reportList = adminCampusService.getReportList();
		 model.addAttribute("reportList", reportList);
	 return "kkuapp/adm/campus/fixReport"; 
	 
	 }

	@RequestMapping(value="/admin/schoolInfoUpdate.do") 
	  public String schoolInfoUpdate(Model model) throws Exception {
		
		//left 메뉴 class on
		model.addAttribute("depth01","campusInfo");
		  
	 return "kkuapp/adm/campus/schoolInfoUpdate"; 
	 
	 }
}
